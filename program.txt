1). Let's create a function that turns text into pig latin: a simple text transformation that modifies each word moving 
the first character to the end and appending "ay" to the end. For example, python ends up as ythonpay.


def pig_latin(text):
  say = " "
  # Separate the text into words
  words = text.split()
  pigged_word=[]
  for word in words:
    # Create the pig latin word and add it to the list
    word=word[1:]+word[0]+'ay'
    pigged_word.append(word)
    # Turn the list back into a phrase
  return say.join(pigged_word)
		
print(pig_latin("hello how are you")) # Should be "ellohay owhay reaay ouyay"
print(pig_latin("programming in python is fun")) # Should be "rogrammingpay niay ythonpay siay unfay"

=======================================================================================================================================

2). The groups_per_user function receives a dictionary, which contains group names with the list of users. Users can belong to 
multiple groups. Fill in the blanks to return a dictionary with the users as keys and a list of their groups as values.

def groups_per_user(group_dictionary):
    user_groups = {}
    for group, users in group_dictionary.items():
        for user in users:
            if user not in user_groups:
                user_groups[user] = []
            user_groups[user].append(group)
    return user_groups

print(groups_per_user({"local": ["admin", "userA"],
		"public":  ["admin", "userB"],
		"administrator": ["admin"] }))
		
OUTPUT: {'admin': ['local', 'public', 'administrator'], 'userA': ['local'], 'userB': ['public']}
